"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/crypto/parse.ts":
/*!*****************************!*\
  !*** ./lib/crypto/parse.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseAe: () => (/* binding */ parseAe)\n/* harmony export */ });\n/**\n * 암호화된 이미지 파일(.aeia, .aeiw) 파서\n * 파일 포맷: [4B: magic] + [12B: IV] + [1,048,576B: cipher] + [16B: tag] + [나머지: tail]\n */ function parseAe(bytes, filename) {\n    console.log(\"\\uD83D\\uDCCB 파일 파싱 시작: \".concat(bytes.length, \" bytes (\").concat(filename || 'unknown', \")\"));\n    // REF-A-2002 스펙: Format(4) + IV(12) + Ciphertext(1MB) + Tag(16) + Plane Tail\n    if (bytes.length < 4) {\n        throw new Error(\"파일이 너무 작습니다: magic header 부족\");\n    }\n    // magic header 안전하게 파싱\n    let magic;\n    try {\n        // 바이너리 데이터를 안전하게 ASCII로 디코딩\n        magic = new TextDecoder('ascii', {\n            fatal: true\n        }).decode(bytes.slice(0, 4));\n        console.log('\\uD83D\\uDD0D Magic header 파싱: \"'.concat(magic, '\" (hex: ').concat(Array.from(bytes.slice(0, 4)).map((b)=>b.toString(16).padStart(2, '0')).join(' '), \")\"));\n    } catch (decodeError) {\n        // ASCII 디코딩 실패 시 수동으로 처리\n        magic = String.fromCharCode(...bytes.slice(0, 4));\n        console.log('⚠️ Magic header fallback: \"'.concat(magic, '\" (hex: ').concat(Array.from(bytes.slice(0, 4)).map((b)=>b.toString(16).padStart(2, '0')).join(' '), \")\"));\n    }\n    // magic header 검증\n    if (magic !== \"aeia\" && magic !== \"aeiw\") {\n        console.error(\"❌ 파일 헤더 분석:\");\n        console.error('  - 기대값: \"aeia\" 또는 \"aeiw\"');\n        console.error('  - 실제값: \"'.concat(magic, '\"'));\n        console.error(\"  - 헤더 hex: \".concat(Array.from(bytes.slice(0, 4)).map((b)=>b.toString(16).padStart(2, '0')).join(' ')));\n        console.error(\"  - 헤더 바이트: [\".concat(Array.from(bytes.slice(0, 4)).join(', '), \"]\"));\n        throw new Error('잘못된 파일 포맷: \"'.concat(magic, '\". aeia 또는 aeiw만 지원됩니다.'));\n    }\n    const headerSize = 4 + 12; // magic(Format) + IV\n    const cipherSize = 1048576; // 1MB\n    const tagSize = 16;\n    const minFileSize = headerSize + cipherSize + tagSize;\n    if (bytes.length < minFileSize) {\n        // 작은 파일의 경우, 실제 파일 크기에 맞춰 cipher 크기 조정\n        const availableCipherSize = bytes.length - headerSize - tagSize;\n        if (availableCipherSize <= 0) {\n            throw new Error(\"파일 크기 부족: \".concat(bytes.length, \"bytes, 최소 \").concat(headerSize + tagSize, \"bytes 필요\"));\n        }\n        console.log(\"⚠️ 파일이 1MB보다 작음, cipher 크기를 \".concat(availableCipherSize, \"bytes로 조정\"));\n    }\n    const iv = bytes.slice(4, headerSize);\n    const cipherStart = headerSize;\n    const actualCipherSize = Math.min(cipherSize, bytes.length - headerSize - tagSize);\n    const cipherEnd = cipherStart + actualCipherSize;\n    const cipher = bytes.slice(cipherStart, cipherEnd);\n    const tag = bytes.slice(cipherEnd, cipherEnd + tagSize);\n    const tail = bytes.slice(cipherEnd + tagSize);\n    console.log(\"\\uD83D\\uDCCB 파싱 결과 (REF-A-2002 스펙):\");\n    console.log('  - Format: \"'.concat(magic, '\" (4 bytes)'));\n    console.log(\"  - IV: \".concat(iv.length, \" bytes (hex: \").concat(Array.from(iv.slice(0, 8)).map((b)=>b.toString(16).padStart(2, '0')).join(' '), \"...)\"));\n    console.log(\"  - Cipher: \".concat(cipher.length, \" bytes\"));\n    console.log(\"  - Tag: \".concat(tag.length, \" bytes (hex: \").concat(Array.from(tag.slice(0, 8)).map((b)=>b.toString(16).padStart(2, '0')).join(' '), \"...)\"));\n    console.log(\"  - Tail: \".concat(tail.length, \" bytes\"));\n    // 상세 정보 추가 로깅\n    console.log(\"\\uD83D\\uDD0D 파싱 상세 정보:\");\n    console.log(\"  - 전체 파일 크기: \".concat(bytes.length, \" bytes\"));\n    console.log(\"  - 예상 최소 크기: \".concat(headerSize + tagSize, \" bytes\"));\n    console.log(\"  - cipher 사이즈 조정: \".concat(actualCipherSize, \" bytes (max: \").concat(cipherSize, \")\"));\n    const result = {\n        format: magic,\n        iv,\n        cipher,\n        tag,\n        tail\n    };\n    console.log(\"✅ 파싱 성공: \".concat(magic, \" 파일\"));\n    return result;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/crypto/parse.ts\n"));

/***/ })

});